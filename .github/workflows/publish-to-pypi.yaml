name: Create Release and Publish to PyPI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"

permissions:
  contents: write
  packages: write

jobs:
  release_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          version=$(poetry version -s)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.extract_version.outputs.version }}" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Build package
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: poetry build

      - name: Publish to PyPI
        if: steps.check_tag.outputs.tag_exists == 'false'
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish
